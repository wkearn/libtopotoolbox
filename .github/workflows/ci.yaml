name: CI

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main", "fillsinks-strides-macos"]

jobs:
  format-check:
    name: Format check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run clang-format style check for C/C++ programs
        uses: jidicula/clang-format-action@v4.11.0
        with:
          clang-format-version: '14'
  debug-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure
        run: >
          cmake -B ${{github.workspace}}/build/debug
          -DCMAKE_BUILD_TYPE=Debug
          -DCMAKE_C_COMPILER=clang
          -DCMAKE_CXX_COMPILER=clang++
          -DTT_BUILD_TESTS=ON
          -DBUILD_SHARED_LIBS=OFF
          -DTT_SANITIZE=ON
      - name: Build library
        run: cmake --build ${{github.workspace}}/build/debug --config Debug
      - name: Test
        run: ctest --test-dir ${{github.workspace}}/build/debug -C Debug --output-on-failure
  macos-debug-build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure
        run: >
          cmake -B ${{github.workspace}}/build/debug
          -DCMAKE_BUILD_TYPE=Debug
          -DCMAKE_C_COMPILER=clang
          -DCMAKE_CXX_COMPILER=clang++
          -DTT_BUILD_TESTS=ON
          -DBUILD_SHARED_LIBS=OFF
          -DTT_SANITIZE=ON
      - name: Build library
        run: cmake --build ${{github.workspace}}/build/debug -v --config Debug
      - name: Test
        run: ctest --test-dir ${{github.workspace}}/build/debug -C Debug --output-on-failure
  release-build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        c_compiler: [gcc, clang, cl]
        include:
          - c_compiler: gcc
            cpp_compiler: g++
          - c_compiler: clang
            cpp_compiler: clang++
          - c_compiler: cl
            cpp_compiler: cl
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: macos-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: cl
    steps:
      - uses: actions/checkout@v4
      - name: Configure static library
        run: >
          cmake -B ${{github.workspace}}/build/static
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_C_COMPILER=${{matrix.c_compiler}}
          -DCMAKE_CXX_COMPILER=${{matrix.cpp_compiler}}
          -DTT_BUILD_TESTS=ON
          -DBUILD_SHARED_LIBS=OFF
      - name: Build static library
        run: cmake --build ${{github.workspace}}/build/static --config Release
      - name: Test static library
        run: ctest --test-dir ${{github.workspace}}/build/static -C Release --output-on-failure
      - name: Configure shared library
        run: >
          cmake -B ${{github.workspace}}/build/shared
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_C_COMPILER=${{matrix.c_compiler}}
          -DCMAKE_CXX_COMPILER=${{matrix.cpp_compiler}}
          -DTT_BUILD_TESTS=ON
          -DBUILD_SHARED_LIBS=ON
          -DTT_SANITIZE=OFF
      - name: Build shared library
        run: cmake --build ${{github.workspace}}/build/shared --config Release
